plugins {
    id 'java-library'
    id "io.qameta.allure" version "2.8.1"
    id "org.gradle.test-retry" version "1.2.1"
}

repositories {
    mavenCentral()
}

allure {
    autoconfigure = true
    aspectjweaver = true
    version = '2.13.8'

    useJUnit5 {
        version = '2.13.8'
    }
}

def selenideVersion = "5.19.0",
    junitVersion = "5.7.1",
    javaFakerVersion = "1.0.2",
    assertJVersion = "3.11.1",
    aspectJWeavwerVersion = "1.9.6",
    allureSelenideVersion = "2.13.9"

dependencies {
    testImplementation (
            "com.codeborne:selenide:$selenideVersion",
            "org.junit.jupiter:junit-jupiter-api:$junitVersion",
            "com.github.javafaker:javafaker:$javaFakerVersion",
            "org.assertj:assertj-core:$assertJVersion",
            "org.aspectj:aspectjweaver:$aspectJWeavwerVersion",
            "net.lingala.zip4j:zip4j:1.3.2",
            "com.codeborne:pdf-test:1.6.1",
            "com.codeborne:xls-test:1.4.3",
            "org.hamcrest:hamcrest-all:1.3",
            "org.apache.poi:poi-ooxml:3.15",
            "net.lingala.zip4j:zip4j:1.3.2",
            "io.qameta.allure:allure-selenide:$allureSelenideVersion")
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()
    /*   retry {
           maxRetries = 3
           maxFailures = 20
           failOnPassedAfterRetry = true
       }*/
}